@model RashidHospital.Models.NurseNoteVM



@{
    ViewBag.Title = "Create";
}


<style>
    .form-horizontal .control-label {
        text-align: left;
    }
</style>
@using (Html.BeginForm("Create", "ChemoCycleNuresNote", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(model => model.Patient_ID)
    @Html.HiddenFor(model => model.CycleId)

    @Html.AntiForgeryToken()
    <div class="modal-body">
        <h4>
            Create new NurseNote

        </h4>
        @if (ViewBag.Error != null)
        {<h5>@ViewBag.Error </h5>}
        <h5> @Html.ValidationSummary("", new { @class = "text-danger" })</h5>
        <hr />
        <div class="box-body">


            <div class="form-group">
                @Html.Label("Temperature", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Pulse", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pulse, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pulse, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("BP", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Weight", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Height", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                </div>
            </div>





            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>


        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


