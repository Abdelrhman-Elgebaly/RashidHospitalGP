@model RashidHospital.Models.PathologyVM

@{
    ViewBag.Title = "Create";
}


<style>
    .form-horizontal .control-label {
        text-align: left;
    }
</style>

@using (Html.BeginForm("Create", "Pathology", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.PatientId)

    <div class="modal-body">
        <h4>
            @ViewBag.PatientInfo

        </h4>
        <h5> @Html.ValidationSummary("", new { @class = "text-danger" })</h5>
        <hr />
        <div class="box-body">
            <div class="form-group">
                @Html.Label("Procedure Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProcedureType, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.ProcedureType, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.pT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pT, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.pT, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.pN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pN, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.pN, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.pM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pM, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.pM, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor Histology", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TumerHistology,  new { htmlAttributes= new { @class = "form-control" ,@required="required"} })
                    @*@Html.ValidationMessageFor(model => model.TumerHistology, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor Grade", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TumerGrade", new SelectList(ViewBag.TumerGrade, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @*@Html.ValidationMessageFor(model => model.TumerGrade, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor Size", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TumerSize, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.TumerSize, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TumerNumber, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.TumerNumber, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Tumor Focality", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TumorFocality", new SelectList(ViewBag.TumorFocality, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @*@Html.ValidationMessageFor(model => model.TumerFocality, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor LVI", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                        <label>
                            @Html.RadioButtonFor(model => model.TumerLVI, true, new { htmlAttributes = new { @class = "form-control", @required = "required" } })+
                        </label>
                        <label>
                            @Html.RadioButtonFor(model => model.TumerLVI, false, new { htmlAttributes = new { @class = "form-control", @required = "required" } })-
                        </label>

                        @*@Html.ValidationMessageFor(model => model.TumerLVI, "", new { @class = "text-danger" })*@
                        </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor PNI", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                        <label>
                            @Html.RadioButtonFor(model => model.TumerPNI, true, new { htmlAttributes = new { @class = "form-control", @required = "required" } })+
                        </label>
                        <label>
                            @Html.RadioButtonFor(model => model.TumerPNI, false, new { htmlAttributes = new { @class = "form-control", @required = "required" } })-
                        </label>
                        @*@Html.ValidationMessageFor(model => model.TumerPNI, "", new { @class = "text-danger" })*@
                    </div>
            </div>
            <div class="form-group">
                @Html.Label("Tumor reaction margin", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TumerMargin", new SelectList(ViewBag.TumorMargins, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @*@Html.ValidationMessageFor(model => model.TumerMargin, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Lymphnode Type Of Surgery", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LymphnodeTypeOfsurgery, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.LymphnodeTypeOfsurgery, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Lymphnode Positive LN", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LymphnodePositiveLN, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.LymphnodePositiveLN, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Lymphnode Total LN", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LymphnodeTotalLN, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.LymphnodeTotalLN, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Lymphnode ECE", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label>
                        @Html.RadioButtonFor(model => model.LymphnodeECE, true, new { htmlAttributes = new { @class = "form-control", @required = "required" } })Present
                    </label>
                    <label>
                        @Html.RadioButtonFor(model => model.LymphnodeECE, false, new { htmlAttributes = new { @class = "form-control", @required = "required" } })Abscent
                    </label>
                     @*@Html.ValidationMessageFor(model => model.LymphnodeECE, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="box-body">
              
                    <div class="form-group">
                        @Html.Label("IHC", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Type", new SelectList(ViewBag.IHCType, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" ,@Id= "Type" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Result", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Result", new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Note", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("Value", new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" id="addIHC" value="Create" class="btn btn-default" style="float:right;">add more IHC</button>
                        </div>
                    </div>
                <div id="Ihc"></div>
                  </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @*@Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <button type="submit" value="Create" class="btn btn-default" >add more</button>

                    <input type="button" class="btn btn-info" value="Back" onclick="location.href='@Url.Action("Index", "Pathology",new { @patientID = (int)ViewBag.PatientId})'" />
                    <button type="reset" class="btn btn-primary" id="btnCancel">Cancel</button>
                </div>
            </div>
        </div>
   </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<link href="~/Content/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

<style>
    table, th, td {
        border: 1px solid black;
    }
</style>
<script>
        $(".select2").select2({
        tags: true
    });
</script>
    <script>
        var IHCList = [];
        $("#addIHC").click(function () {
            var Value = $("#Value").val();
            var selectedType = $("#Type").val();
            var selectedText = $("#Type option:selected").text();
            var Result =$("#Result").val();
            var PatientId = $("#PatientId").val();
            IHCList.push({
                "Test": selectedText,
                "Result": Result,
                "Note": Value,
            });
            var html = '<table style="width:100%;">';
            html += '<tr>';
            for (var j in IHCList[0]) {
                html += '<th>' + j + '</th>';
            }
            html += '</tr>';
            for (var i = 0; i < IHCList.length; i++) {
                html += '<tr>';
                for (var j in IHCList[i]) {
                    html += '<td>' + IHCList[i][j] + '</td>';
                }
                html += '</tr>';


            }
            html += '</table>';
            document.getElementById('Ihc').innerHTML = html;
            $("#Value").val();
             $("#Type").val();
            $.ajax({
                url: "/Pathology/SaveIHC",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: {"Value": Value, "Type": selectedType, "Result": Result, "PatientId": PatientId},
                traditional: true,
                success: function (data) {
                    

                }
               
            });
        });

    </script>
 
}
