@model RashidHospital.Models.PatientVM
<link href="~/Content/build/css/intlTelInput.min.css" rel="stylesheet" />


<style>
    .form-horizontal .control-label {
        text-align: left;
    }

    .form-control {
        margin-bottom: 3px !important;
    }
</style>
<form method="post" id="editEmpForm">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.MedicalID)
    @Html.HiddenFor(model => model.DiagnoseId)
    @Html.HiddenFor(model => model.LastVisitDate)
    
    <div class="modal-body">
        <div class="callout callout-success">
            <b>Patinent:</b> <span>@Model.Name</span>
        </div>
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Arabic Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameArabic, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.NameArabic, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("BirthDate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form -control", @type = "date", @required = "required" } })
                  
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone 1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber1, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone 2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone 3", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber3, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Address1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("NationalID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalID, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.NationalID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (var gender in Model.Genders)
                    {
                        @Html.RadioButtonFor(model => model.Gender, gender, new { htmlAttributes = new { @class = "form-control", @required = "required" } }) @gender<br />
                    }

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("MaritaStatus", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (var gender in Model.MaritalStatusList)
                    {
                        @Html.RadioButtonFor(model => model.MaritalStatus, gender, new { htmlAttributes = new { @class = "form-control", @required = "required" } }) @gender<br />
                    }

                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("No.Children", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfChildren, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.NoOfChildren, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UnitID", new SelectList(ViewBag.PatientUnit, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-default" id="btnSubmit">Save changes</button>

            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            <button type="reset" class="btn btn-primary" id="btnCancel">Cancel</button>


        </div>
    </div>
    
</form>
<link href="~/Content/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

<script>
        $(".select2").select2({
        tags: true
    });
</script>

<script>

	$("#editEmpForm").submit(function (e) {
		e.preventDefault();
			$("#btnSubmit").attr("disabled", true).text('Loading...');
			$.ajax({
				type: "Post",
				url: "@Url.Action("EditPatient", "Patient")",
				cache: false,
				data: $("#editEmpForm").serialize(),
				success: function (result) {
					if (result == "Success") {
					    $("#clinicModel").modal("hide");
						location.reload();
					}
					else if (result == "Error500") {
						window.location.href = '@Url.Action("Error500", "Home")';
					}

				},
			})

	});
   
  
</script>
