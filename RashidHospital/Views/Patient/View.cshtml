@model RashidHospital.Models.PatientVM

@{
    ViewBag.Title = "Patient File";
}

<style>
    .form-horizontal .control-label {
        text-align: left;
    }

    .form-control {
        margin-bottom: 3px !important;
    }
</style>
    <div class="modal-body">
        <h4>Open Patient File. 
        <br />
                @ViewBag.PatientInfo
            </h4>
        <hr />
        <a class="btn btn-success adjust-actions" title="Edit Diagnose" onclick="openEditDiagnoseModal(@Model.Id)">
            Edit Diagnosis
        </a>
        <a class="btn btn-success adjust-actions" title="History" onclick="openModal(@Model.Id)">
            Patient History
        </a>
        <a class="btn btn-success adjust-actions" title="Visits" onclick="openRecordsModal(@Model.Id)">
            Patient Visit
        </a>
        <a class="btn btn-success adjust-actions" title="Patient" onclick="openReqandRestModal(@Model.Id)">
           Requests and Results
        </a>
        <a class="btn btn-success adjust-actions" title="Patient" onclick="openAppointmentModal(@Model.Id)">
            Appointment
                </a>
       @{
           var Callboard = HttpContext.Current.Request.QueryString["CallBoard"];
           if (Callboard != null)
           {
            <a class="btn btn-success adjust-actions" title="Patient" onclick="openCallBoardagainModal(@Callboard)">
                close patient and return too callboard
            </a>
           }
    }

        <hr />
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",  @disabled = "disabled" } })
                   
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Arabic Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameArabic, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.NameArabic, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Birth Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form -control datepicker", @type = "date", @disabled = "disabled" } })
                  
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Phone 1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber1, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @type = "number" } })

                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone 2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @type = "number" } })

                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone 3", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber3, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @type = "number" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                   
                </div>
            </div>

            <div class="form-group">
                @Html.Label("National ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalID, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @type = "number" } })
                   
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (var gender in Model.Genders)
                    {
                        @Html.RadioButtonFor(model => model.Gender, gender, new { htmlAttributes = new { @class = "form-control", disabled = "true" } }) @gender<br />
                    }

                </div>
            </div>
            <br />
          
            <div class="form-group">
                @Html.Label("MaritaStatus", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (var gender in Model.MaritalStatusList)
                    {
                        @Html.RadioButtonFor(model => model.MaritalStatus, gender, new { htmlAttributes = new { @class = "form-control" , disabled = "true" } }) @gender<br />
                    }

                </div>
            </div>
            <div class="form-group">
                @Html.Label("No Of Children", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfChildren, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @type = "number" } })
                   
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.EditorFor(model => model.PatientUnitName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled"} })


                </div>
                <div class="form-group">
                    @Html.Label("Diagnosis Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.DiagnoseName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })


                    </div>
                </div>
          
        </div>
    </div>

</div>
<!--openEditDiagnoseModal-->
<div class="modal fade" id="DiagnoseModel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Edit Patient</h4>
            </div>
            <div id="editDiagnoseBody"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/intlTelInput.min.js"></script>
<script>
                $('input:radio.form-control').prop('disbled', true);
</script>
<script>

      //openEditDiagnoseModal
    function openEditDiagnoseModal(patientID) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("_EditDiagnose", "Patient")",
            cache: false,
            data: { patientID: patientID },
            success: function (result) {
                if (result.IsRedirect) {
                    window.location.href = result.RedirectUrl;
                }
                else {
                    $("#editDiagnoseBody").html(result.Content);
                    $("#DiagnoseModel").modal("show")
                }
            },
            error: function (result) {
                window.location.href = '@Url.Action("Error404", "Home")';
            },
        })
    };
    function openReqandRestModal(patientID){
        window.location.href ='/Patient/RequestsandResults?patientID='+patientID;

    }
    function openModal(patientID){
        window.location.href ='/MedicalCondition/index?patientID='+patientID;
    }


    function openRecordsModal(patientID){
        window.location.href ='/MedicalRecord/index?patientID='+patientID;
    }
    function openAppointmentModal(patientID){
        window.location.href ='/Appointment/Create?PatientId='+patientID;
    
    }
    function openCallBoardagainModal(callBoardId){
        window.location.href ='/CallBoard/Edit?Id='+callBoardId;
    
    }
</script>
}

