@model RashidHospital.Models.ChemoTherapyTemplateVM


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <section class="content-header">
        <h2>@Model.Protocol_Name Protocol</h2>

    </section>
    <hr />
    <div class="box-header">
        <h3 class="box-title">
            <a href="@Url.Action("Index", "ChemoTherapyDrug", new { templateID = @Model.Template_ID })" class="btn btn-primary">
                Therapies
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
            </a>
        </h3>
    </div>
    <div class="box-header">
        <h3 class="box-title">
            <a href="@Url.Action("Index", "ChemoTherapyPreLab", new { templateID = @Model.Template_ID})" class="btn btn-primary">
                Predefined Lab
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
            </a>
        </h3>
    </div>
    <div class="box-header">
        <h3 class="box-title">
            <a href="@Url.Action("Index", "ChemoTherapyPreInvestigations", new { templateID = @Model.Template_ID })" class="btn btn-primary">
                Predefined Investigations
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
            </a>
        </h3>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Protocol_Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Protocol_Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Frequency, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cycle_days, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cycle_days, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Cycle_days, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Maximum_cycles, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Maximum_cycles, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Maximum_cycles, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Emetogenic_Level, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Emetogenic_Level, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Emetogenic_Level, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FN_risk, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FN_risk, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.FN_risk, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Disease, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Disease, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.Disease, "", new { @class = "text-danger" })
        </div>
    </div>


    <div>&nbsp;&nbsp;&nbsp;&nbsp;</div>

    <div &nbsp;&nbsp;&nbsp; class="form-group">
        <div class="box-header">
            <h3 class="box-title">
                <a href="@Url.Action("ApplyTemplate", "ChemoTherapy", new { patientID = ViewBag.PatientId,templateID = @Model.Template_ID  })" class="btn btn-primary">
                    Apply to Patient
                    <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
                </a>
            </h3>
        </div>
    </div>


</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/intlTelInput.min.js"></script>
    <script>
        $('input:radio.form-control').prop('disbled', true);
    </script>
    <script>

      //openEditDiagnoseModal
    function openEditDiagnoseModal(patientID) {
        $.ajax({
            type: "GET",
            url: "@Url.Action("_EditDiagnose", "ChemoTherapyTemplate")",
            cache: false,
            data: { patientID: patientID },
            success: function (result) {
                if (result.IsRedirect) {
                    window.location.href = result.RedirectUrl;
                }
                else {
                    $("#editDiagnoseBody").html(result.Content);
                    $("#DiagnoseModel").modal("show")
                }
            },
            error: function (result) {
                window.location.href = '@Url.Action("Error404", "Home")';
            },
        })
    };
    </script>

}

