@model RashidHospital.Models.PatientVM

@{
    ViewBag.Title = "Create";
}



<style>
    .form-horizontal .control-label {
        text-align: left;
    }
    .form-control {
    margin-bottom:3px !important;
    }
</style>
@using (Html.BeginForm("Create", "Patient", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <h4>Create a new Patient.</h4>
        <h5> @Html.ValidationSummary("", new { @class = "text-danger" })</h5>
        <hr />
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Arabic Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameArabic, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.NameArabic, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Birth Date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker", @required = "required" } })
                    @*@Html.EditorFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control datepicker", @type = "date", @required = "required" } })*@

                    
                    <p id="age"></p>
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone Number1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber1, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone Number2", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber2, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @*@Html.ValidationMessageFor(model => model.PhoneNumber2, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Phone Number3", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber3, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @*@Html.ValidationMessageFor(model => model.PhoneNumber3, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.Label("National ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NationalID, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.NationalID, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                

                    @foreach (var gender in Model.Genders)
                    {
                        @Html.RadioButtonFor(model => model.Gender, gender, new { htmlAttributes = new { @class = "form-control", @required = "required" } }) @gender<br />
                    }

                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">


                    @foreach (var gender in Model.MaritalStatusList)
                    {
                        @Html.RadioButtonFor(model => model.MaritalStatus, gender, new { htmlAttributes = new { @class = "form-control", @required = "required" } }) @gender<br />
                    }

                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("No Of Children", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfChildren, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                    @*@Html.ValidationMessageFor(model => model.NoOfChildren, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UnitID", new SelectList(ViewBag.PatientUnit, "Value", "Text"), htmlAttributes: new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
                </div>
            </div>
           
            
            <div class="form-group" style="float:right;">
                <div class="col-md-12">
                    <button type="submit" value="Create" class="btn btn-default" >Create</button>
                    <input type="button" class="btn btn-info" value="Back" onclick="location.href='@Url.Action("Index", "Patient")'" />
                    <button type="reset" class="btn btn-primary" id="btnCancel">Cancel</button>
                </div>
            </div>
        </div>
   </div>
}



@section Scripts {
<link href="~/Content/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>

<script>
        $(".select2").select2({
        tags: true
    });
</script>
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script type="text/javascript">
  
    $("#BirthDate").datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
        orientation: 'bottom left'
    });
    //    .on('changeDate', function (ev) {
    //   // var dob = new Date($("#BirthDate").val());
    //    var dtV = $(this).val();
    //    var exploded=dtV.split("-");
    //    var d = new Date(exploded[2],exploded[1],exploded[0]);
    //    var today = new Date();

    //    var Age = parseInt(today.getFullYear()) - parseInt(d.getFullYear());

    //    $("#age").val('');
    //    $("#age").val("patient is:" + Age);


    //});;
    $('#BirthDate').change(function () {
        var today = new Date();
       // var date = new Date($("#BirthDate").val());
        //console.log(date);
            var dtV = $(this).val();
            var exploded=dtV.split("-");
            var d = new Date(exploded[2],exploded[1],exploded[0]);
            age = today.getFullYear() - d.getFullYear();
            $('#age').text("patient is:" + age);
    });
   
  
</script>
}
